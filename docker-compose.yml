services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.168.249:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - kafka-network

  pgdb:
    image: postgres:14
    container_name: pgdb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Khongbiet098
      POSTGRES_DB: ny_taxi
    volumes:
      - D:/DE/kaf/pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - pg-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "8080:80"
    networks:
      - pg-network

  metabase:
    image: metabase/metabase
    container_name: metabase
    ports:
      - "3000:3000"
    networks:
      - pg-network

  airflow:
    image: apache/airflow:2.8.0
    name: airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "false"
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    volumes:
      - ./airflow:/opt/airflow
    ports:
      - "8080:8080"
    command: webserver
    networks:
      - pg-network
      
networks:
  kafka-network:
  pg-network:
